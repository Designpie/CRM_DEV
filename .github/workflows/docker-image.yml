name: Docker CI/CD
on:
  push:
    branches: [ "main" ]
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: DockerfileFolder/
        push: true
        tags: design399/crm_docker:${{ github.sha }}
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'design399/crm_docker:${{ github.sha }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Deploy to Dev
        run: |
          docker stop dev_container || true
          docker rm dev_container || true
          docker run -d --user appuser -p 127.0.0.1:8080:8080 --name dev_container --health-cmd="curl -f http://localhost:8080/ || exit 1" --health-interval=5m --health-retries=3 design399/crm_docker:${{ github.sha }}
          echo "Deployed to Dev environment"

  deploy-qa:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: qa
    steps:
      - name: Deploy to Q/A
        run: |
          docker stop qa_container || true
          docker rm qa_container || true
          docker run -d --user appuser -p 127.0.0.1:8081:8080 --name qa_container --health-cmd="curl -f http://localhost:8080/ || exit 1" --health-interval=5m --health-retries=3 design399/crm_docker:${{ github.sha }}
          echo "Deployed to Q/A environment"

  deploy-prod:
   needs: deploy-qa
   runs-on: ubuntu-latest
   environment: production
   steps:
    - name: Deploy to Production (Docker)
      run: |
        docker stop prod_container || true
        docker rm prod_container || true
        docker run -d --user appuser -p 127.0.0.1:8082:8080 --name prod_container --health-cmd="curl -f http://localhost:8080/ || exit 1" --health-interval=5m --health-retries=3 design399/crm_docker:${{ github.sha }}
        echo "Deployed to Production environment (Docker)"
    
    - name: Deploy to Production (cPanel)
      uses: SamKirkland/FTP-Deploy-Action@4.3.3
      with:
        server: 154.0.170.76
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        server-dir: ${{ secrets.FTP_SERVER_DIR }}/
        port: 21
        protocol: ftps
